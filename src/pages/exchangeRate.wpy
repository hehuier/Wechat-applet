
<template>
  <view class="container rate-page">
    <view class="inputMoney moneyBox">
      <input type="number" value="{{inputVaule}}" bindinput="bindReplaceInput" placeholder="请输入兑换的货币" />
    </view>
    <view class="calc-box">
      <view class="fPri selectPri">
        <picker bindchange="bindFpickerChange" value="{{fIndex}}" range="{{aCurrency}}">
          <view class="picker">{{aCurrency[fIndex]}}</view>
        </picker>
        <view class="triangle"></view>      
      </view>
      <view class="calc-btn">
        <image src="../images/icon_exchange_rate.png" bindtap="changeCurrency"></image>
      </view>
      <view class="mPri selectPri">
        <picker bindchange="bindMpickerChange" value="{{mIndex}}" range="{{aCurrency}}">
          <view class="picker">{{aCurrency[mIndex]}}</view>
        </picker>
        <view class="triangle"></view>       
      </view>      
    </view>
    <view class="resultMoney moneyBox">
      <input type="number" value="{{outputVaule}}" disabled="true" />
    </view>
    <view class="tips">
      <text>数据仅供参考，交易时以银行柜台成交价为准\n更新时间:2018-12-06 11:22</text>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {api} from '../config'
  import request from '../utils/request'

  export default class Collect extends wepy.page {
    config = {
      navigationBarTitleText: '汇率转换'
    }
    data = {
      onOff: true,
      inputVaule: '',
      outputVaule: '0000',
      formCurrency: '',
      toCurrency: '',
      fIndex: 1,
      mIndex: 0,
      aCurrency: ['人民币', '新索尔', '美元'],
      oCurrency: [{
        en: 'CNY',
        ch: '人民币'
      }, {
        en: 'PEN',
        ch: '新索尔'
      }, {
        en: 'USD',
        ch: '美元'
      }]
    }
    bindReplaceInput (e) {
      let self = this
      if (e.detail.value.replace(/(^\s*)|(\s*$)/g, '') === '') {
        self.outputVaule = '0000'
      }
      self.inputVaule = e.detail.value.replace(/(^\s*)|(\s*$)/g, '')
      self.getMoneyNum()
    }
    bindFpickerChange (e) {
      let self = this
      self.fIndex = e.detail.value
      self.getMoneyNum()
    }
    bindMpickerChange (e) {
      let self = this
      self.mIndex = e.detail.value
      self.getMoneyNum()
    }
    changeCurrency () {
      let self = this
      if (self.onOff) {
        self.onOff = false
        self.fIndex = [self.fIndex, self.mIndex]
        self.mIndex = self.fIndex[0]
        self.fIndex = self.fIndex[1]
        self.getMoneyNum()
        self.onOff = true
      }
    }
    matchCurrency (arrIndex) {
      let self = this
      var name = self.oCurrency[arrIndex]
      return name
    }
    getMoneyNum () {
      let self = this
      if (self.inputVaule !== '' && !isNaN(self.inputVaule)) {
        self.formCurrency = self.matchCurrency(self.fIndex).en
        self.toCurrency = self.matchCurrency(self.mIndex).en
        wepy.showLoading({
          title: '加载中'
        })
        request({
          url: api.exchange.url + '&from=' + self.formCurrency + '&to=' + self.toCurrency + '&money=' + self.inputVaule,
          method: api.exchange.method,
          success: function (res) {
            wepy.hideLoading()
            self.outputVaule = parseFloat(res.data.count)
            self.$apply()
          }
        })
      }
    }
    onLoad () {
      this.getMoneyNum()
    }
  }
</script>

<style lang="less">
.rate-page{
  padding:50rpx;
  justify-content:flex-start;
}
.moneyBox{
  width: 100%;
  input{
    border: 1px solid #e2e2e2;
    background-color: #f7f7f7;
    height: 160rpx;
    line-height: 160rpx;
    font-size: 32rpx;
    text-align: center;
    color: #999;
  }
}
.calc-box{
  width: 100%;
  display: flex;
  flex-direction:row;
  justify-content: flex-start;
  align-items:flex-start;
  padding: 100rpx 0;
  .selectPri{
    width: 240rpx;
    height: 82rpx;
    background-color: #e2231a;
    color: #fff;
    font-size: 28rpx;
    line-height: 82rpx;
    text-align: center;
    position: relative;
    .triangle{
      width:0;
      height:0;
      border-width:12rpx 12rpx 0;
      border-style:solid;
      border-color:#fff transparent transparent;
      position:absolute;
      right: 30rpx;
      top: 45%;
    }
  }
  .calc-btn{
    width: calc(100% - 480rpx);
    text-align: center;
    image{
      width: 82rpx;
      height: 82rpx;
    }
  }
}
.tips{
  width: 100%;
  flex-grow:1;
  text-align: center;
  position: relative;
  text{
    width: 100%;
    text-align: center;
    color: #999;
    font-size: 28rpx;
    line-height: 2;
    position: absolute;
    left:0;
    right: 0;
    bottom: 0;
  }
}
</style>
