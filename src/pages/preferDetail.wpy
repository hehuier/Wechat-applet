<template>
  <view class="container detail-page">
    <view class="page-centent">
      <import src="../wxParse/wxParse.wxml"/>
      <view class="detail-area">
        <view class="banner">
          <image mode="aspectFill" class="img img-bg-loading" src="{{detailData.img}}"></image>
          <view class="cover"><text class="title">{{detailData.title}}</text></view>
        </view>
        <view class="detail-content">
          <view class="con-txt {{isFolded?'':'maxHeight'}}">     
            <view class="con-txt-inner">              
              <template is="wxParse" data="{{wxParseData:article.nodes}}"/>                 
            </view> 
            <view class="whiteBg {{showFold ? 'show': 'hide'}}"></view>        
          </view>
          <view class="fold-box {{showFold ? 'show': 'hide'}}" bindtap="showAll">
            <image class="icon" src="{{isFolded?'../images/fold.png':'../images/unfold.png'}}"></image>
            {{isFolded?'展开':'收起'}}
          </view>
        </view>
      </view>
      <view class="list" wx:if="{{placeData.length > 0}}">
        <!-- <view class="th"><text>精彩推荐</text></view> -->
        <repeat for="{{placeData}}" key="index" index="index" item="item">
          <hotItem :item="item" :istheme="is_theme"/>
        </repeat>
      </view>
    </view>
    <view class="official-account">
      <official-account></official-account>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {api} from '../config'
  import request from '../utils/request'
  import HotItem from '../components/hotItem'
  import FlexText from '../components/flexText'
  let WxParse = require('../wxParse/wxParse.js')

  export default class PreferDetail extends wepy.page {
    components = {
      flexText: FlexText,
      hotItem: HotItem
    }
    data = {
      showFold: false,
      is_theme: 0,
      isFolded: false,
      detailData: [],
      placeData: []
    }
    getThemeData (themeId) {
      let self = this
      // 获取页面详情
      request({
        url: api.theme.url + '&theme_id=' + themeId,
        method: api.theme.method,
        success: function (res) {
          wepy.hideLoading()
          self.placeData = res.data
          self.$apply()
        }
      })
    }
    flodFn () {
      var self = this
      var screenW = ''
      wx.getSystemInfo({
        success: function (res) {
          screenW = res.windowWidth
        }
      })
      wx.createSelectorQuery().select('.detail-content .con-txt-inner').fields({
        size: true
      }, function (res) {
        if (res.height > screenW / 750 * 420) {
          console.log('折叠')
          self.showFold = true
          self.isFolded = true
          console.log(self.showFold, self.isFolded, 1111)
        } else {
          self.showFold = false
          self.isFolded = false
        }
      }).exec()
    }
    showAll () {
      let self = this
      self.isFolded = !self.isFolded
    }
    // 获取文章
    getData (detailId) {
      let self = this
      wepy.showLoading({
        title: '加载中'
      })
      // 获取页面详情
      request({
        url: api.article.url + '&id=' + detailId,
        method: api.article.method,
        success: function (res) {
          this.pageTitle = res.data.title
          wepy.setNavigationBarTitle({
            title: res.data.title
          })
          if (res.data.title) {
            // 小程序统计
            wepy.reportAnalytics('post_views', {
              post_name: res.data.title
            })
          }
          wepy.hideNavigationBarLoading()
          self.detailData = res.data
          self.theme_id = res.data.id
          self.content = unescape(self.detailData.content)
          WxParse.wxParse('article', 'html', self.content, self, 5)
          /**
           * self.flodFn()
           */
          if (self.is_theme) {
            self.getThemeData(self.theme_id)
          } else {
            wepy.hideLoading()
            self.placeData = res.data.place_ids
            self.$apply()
          }
        }
      })
    }
    onLoad (options) {
      this.is_theme = parseInt(options.is_theme)
      wepy.showNavigationBarLoading()
      this.getData(options.id)
    }
    onShow () {
      // this.$invoke('flexText', 'close')
    }
    /**
     * 用户点击右上角分享
     */
    onShareAppMessage (res) {
      if (res.from === 'button') {
        // 来自页面内转发按钮
      }
      return {
        title: this.detailData.title,
        path: 'pages/preferDetail?id=' + this.detailData.id,
        success: function (res) {
          // 转发成功
        },
        fail: function (res) {
          // 转发失败
        }
      }
    }
  }
</script>
<style lang="less">
@import "../wxParse/wxParse.wxss";
.detail-page{
  // min-height:100%;
  // height:auto;
  height:100%;
  display:flex;
  flex-direction:column;
}
.page-centent{
  width: 100%;
  flex:1;
}
.official-account{
  width:100%;
}
/*详情内容*/
.detail-area{
  width:100%;
  margin-bottom:20rpx;
}
.detail-content{
  width:100%;
  box-sizing:border-box;
  padding:50rpx 50rpx 0;
  background-color:#fff;
  color:#333;
  font-family:'Microsoft YaHei';
  .con-txt{
    font-size:32rpx;
    line-height:1.875;
    max-height: 420rpx;
    overflow: hidden;
    margin-bottom: 25rpx;
    position: relative;
    &.maxHeight {
      max-height: none;
    }
    .whiteBg{
      width: 100%;
      height: 140rpx;
      position: absolute;
      left:0;
      right: 0;
      bottom: 0;
      background: linear-gradient(rgba(255,255,255,0), rgba(255,255,255,0.8));
      background: -webkit-linear-gradient(rgba(255,255,255,0), rgba(255,255,255,0.8));
    }
  }
  .fold-box{
    width: 100%;
    text-align: center;
    font-size: 26rpx;
    padding:20rpx 0;
    .icon{
      width: 26rpx;
      height: 26rpx;
      vertical-align: middle;
    }
  }
}
.banner{
  width:100%;
  position:relative;
  font-size:0;
  line-height:0;
  .img{
    width:100%;
    height:560rpx;
  }
  .cover{
    position:absolute;
    bottom:0;
    left:0;
    width:100%;
    box-sizing:border-box;
    padding:30rpx 50rpx;
    background:linear-gradient(to top, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0));
  }
  .title{
    color:#fff;
    font-size:48rpx;
    line-height:1.3;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;    
    background-color:transparent;
  }
}
/*推荐列表*/
.list{
  width:100%;
  padding:60rpx 50rpx;
  background-color:#fff;
  box-sizing:border-box;
  .th{
    font-size: 48rpx;
    line-height: 1;
    padding-bottom: 50rpx;
  }
}
.wxParse-p .wxParse-img{
  width:100%;
}
.con-txt-inner .wxParse-p{
  min-height: 0.8em;
}
</style>
